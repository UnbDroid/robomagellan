// Generated by gencpp from file raspberry_msgs/ParamGyro.msg
// DO NOT EDIT!


#ifndef RASPBERRY_MSGS_MESSAGE_PARAMGYRO_H
#define RASPBERRY_MSGS_MESSAGE_PARAMGYRO_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace raspberry_msgs
{
template <class ContainerAllocator>
struct ParamGyro_
{
  typedef ParamGyro_<ContainerAllocator> Type;

  ParamGyro_()
    : offset_x(0.0)
    , offset_y(0.0)
    , offset_z(0.0)  {
    }
  ParamGyro_(const ContainerAllocator& _alloc)
    : offset_x(0.0)
    , offset_y(0.0)
    , offset_z(0.0)  {
  (void)_alloc;
    }



   typedef double _offset_x_type;
  _offset_x_type offset_x;

   typedef double _offset_y_type;
  _offset_y_type offset_y;

   typedef double _offset_z_type;
  _offset_z_type offset_z;




  typedef boost::shared_ptr< ::raspberry_msgs::ParamGyro_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::raspberry_msgs::ParamGyro_<ContainerAllocator> const> ConstPtr;

}; // struct ParamGyro_

typedef ::raspberry_msgs::ParamGyro_<std::allocator<void> > ParamGyro;

typedef boost::shared_ptr< ::raspberry_msgs::ParamGyro > ParamGyroPtr;
typedef boost::shared_ptr< ::raspberry_msgs::ParamGyro const> ParamGyroConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::raspberry_msgs::ParamGyro_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::raspberry_msgs::ParamGyro_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace raspberry_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'raspberry_msgs': ['/home/pi/Documents/robomagellan/Codigos/Raspberry/ROS/catkin_BUZZ/src/raspberry_msgs/msg'], 'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::raspberry_msgs::ParamGyro_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::raspberry_msgs::ParamGyro_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::raspberry_msgs::ParamGyro_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::raspberry_msgs::ParamGyro_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::raspberry_msgs::ParamGyro_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::raspberry_msgs::ParamGyro_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::raspberry_msgs::ParamGyro_<ContainerAllocator> >
{
  static const char* value()
  {
    return "50459a5c7310f8fe473ace67a38a019e";
  }

  static const char* value(const ::raspberry_msgs::ParamGyro_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x50459a5c7310f8feULL;
  static const uint64_t static_value2 = 0x473ace67a38a019eULL;
};

template<class ContainerAllocator>
struct DataType< ::raspberry_msgs::ParamGyro_<ContainerAllocator> >
{
  static const char* value()
  {
    return "raspberry_msgs/ParamGyro";
  }

  static const char* value(const ::raspberry_msgs::ParamGyro_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::raspberry_msgs::ParamGyro_<ContainerAllocator> >
{
  static const char* value()
  {
    return "float64 offset_x\n\
float64 offset_y\n\
float64 offset_z\n\
";
  }

  static const char* value(const ::raspberry_msgs::ParamGyro_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::raspberry_msgs::ParamGyro_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.offset_x);
      stream.next(m.offset_y);
      stream.next(m.offset_z);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct ParamGyro_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::raspberry_msgs::ParamGyro_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::raspberry_msgs::ParamGyro_<ContainerAllocator>& v)
  {
    s << indent << "offset_x: ";
    Printer<double>::stream(s, indent + "  ", v.offset_x);
    s << indent << "offset_y: ";
    Printer<double>::stream(s, indent + "  ", v.offset_y);
    s << indent << "offset_z: ";
    Printer<double>::stream(s, indent + "  ", v.offset_z);
  }
};

} // namespace message_operations
} // namespace ros

#endif // RASPBERRY_MSGS_MESSAGE_PARAMGYRO_H
